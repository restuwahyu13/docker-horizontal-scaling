version: "3"
services:
  ##########################
  #  APP SERVICE ENVIRONMENT
  ##########################
  app:
    build: .
    restart: always
    healthcheck:
      test: "env | grep SHELL_SESSION_ID"
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 15s
    deploy:
      replicas: 3
      mode: replicated
      resources:
        limits:
          cpus: "2"
          memory: "8192M"
        reservations:
          cpus: "2"
          memory: "4092M"
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 30s
        window: 60s
    expose:
      - 3000
    env_file: .env
    depends_on:
      - database
    volumes:
      - ./:/usr/share/app
      - /usr/share/app/node_modules
    networks:
      - node_networks
  ##############################
  # DATABASE SERVICE ENVIRONMENT
  ##############################
  database:
    image: postgres:14-alpine
    restart: always
    healthcheck:
      test: "env | grep SHELL_SESSION_ID"
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 15s
    env_file: .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DBNAME}
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql
    networks:
      - node_networks
  ##############################
  # PROXY SERVICE ENVIRONMENT
  ##############################
  proxy:
    image: nginx:1.23.2-alpine
    restart: always
    healthcheck:
      test: "env | grep SHELL_SESSION_ID"
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 15s
    ports:
      - 80:80
      - 433:433
    depends_on:
      - app
    volumes:
      - ${PWD}/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - node_networks
#############################
# VOLUME PERSISTENT DATA
#############################
volumes:
  database:
#############################
# NETWORKS SHARING GROUP
#############################
networks:
  node_networks: